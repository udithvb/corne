/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        back_i3: back_i3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "BACK_I3";
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "base";
            bindings = <
&kp TAB    &kp Q  &kp W       &kp F           &kp P               &kp B        &kp J         &kp L               &kp U           &kp Y           &kp SEMICOLON  &kp BSPC
&kp LCTRL  &kp A  &mt LGUI R  &mt LEFT_ALT S  &mt LEFT_CONTROL T  &kp G        &kp M         &mt LEFT_CONTROL N  &mt LEFT_ALT E  &mt LEFT_GUI I  &kp O          &kp SQT
&kp LSHFT  &kp Z  &kp X       &kp C           &mt LEFT_SHIFT D    &kp V        &kp K         &mt LEFT_SHIFT H    &kp COMMA       &kp DOT         &kp FSLH       &kp ESC
                              &lt 5 ESCAPE    &lt 2 SPACE         &lt 4 TAB    &lt 3 RETURN  &lt 1 BACKSPACE     &lt 6 DELETE
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "num";
            bindings = <
&kp TAB     &kp N1        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &kp NUMBER_0  &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        nav {
            display-name = "nav";
            bindings = <
&kp TAB     &kp N1        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &kp NUMBER_0  &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        sym {
            bindings = <
&trans  &trans  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RPAR)   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(AMPS)   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(EXCL)   &kp LS(AT)     &kp LS(POUND)  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                               &trans         &kp LS(RPAR)   &trans    &trans  &trans  &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR      &bt BT_NXT    &bt BT_PRV    &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                        &trans  &trans  &trans    &trans          &trans        &trans
            >;
        };

        fun {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
